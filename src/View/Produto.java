/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.ControllerBaseCtrl;
import Controller.CtrlFabricante;
import Controller.CtrlLote;
import Controller.CtrlProduto;
import Controller.CtrlUndMedida;
import View.Mensagens.Mensagem;
import com.google.gson.Gson;
import com.google.gson.JsonArray;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;
import com.google.gson.JsonPrimitive;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

/**
 *
 * @author Abner
 */
public class Produto extends javax.swing.JDialog {

    /**
     * Creates new form Produto
     */
    boolean isAlterarProduto = false;
    boolean isAlterarLote = false;
    private JsonParser objParser;
    private JsonObject objJsonProduto;
    private ControllerBaseCtrl objCtrlProd;
    private int codBackup = -1;
    private JsonArray Lotes;
    private int iAtivoLote = -1;
    private DecimalFormat dfSalvar;

    public Produto(java.awt.Frame parent, boolean modal, int pCodigoInicial) {
        super(parent, modal);
        initComponents();
        dfSalvar = new DecimalFormat("#,##0.00");
        controlaAcessoProduto(true);
        habilitaMenuLote(false);
        Util.Util.temaVisualizacao(this);
        objParser = new JsonParser();
        objCtrlProd = new CtrlProduto();
        Lotes = new JsonArray();
        if (pCodigoInicial > 0) {
            setProdutoTela(objCtrlProd.Recuperar(pCodigoInicial));
        } else {
            setProdutoTela(objCtrlProd.RecuperaUltimoRegistro());
        }
        txtNomeFab.setEditable(false);
        //new CtrlProduto().RecuperaProdutosQtdMin();
    }

    public Produto() {

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelNome = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        buscar = new javax.swing.JButton();
        txtCodigo = new javax.swing.JFormattedTextField();
        btnPrimeiroProduto = new javax.swing.JButton();
        btnAnteriorProduto = new javax.swing.JButton();
        btnProximoProduto = new javax.swing.JButton();
        btnUltimoProduto = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabelQuantidade = new javax.swing.JLabel();
        jLabelFab = new javax.swing.JLabel();
        txtCNPJFabricante = new javax.swing.JFormattedTextField();
        btnBuscarFab = new javax.swing.JButton();
        txtNomeFab = new javax.swing.JTextField();
        jLabelDataInclusao = new javax.swing.JLabel();
        txtDataInclusao = new javax.swing.JFormattedTextField();
        txtValidade = new javax.swing.JFormattedTextField();
        jLabelValidade = new javax.swing.JLabel();
        jLabelNotaFiscal = new javax.swing.JLabel();
        txtNotaFiscal = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        btnIncluirLote = new javax.swing.JButton();
        btnSalvarLote = new javax.swing.JButton();
        btnAlterarLote = new javax.swing.JButton();
        btnCancelarLote = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        btnPrimeiroLote = new javax.swing.JButton();
        btnAnteriorLote = new javax.swing.JButton();
        btnProximoLote = new javax.swing.JButton();
        btnUltimoLote = new javax.swing.JButton();
        jLabelFab1 = new javax.swing.JLabel();
        txtLote = new javax.swing.JTextField();
        btnBuscarLote = new javax.swing.JButton();
        txtQuantidade = new javax.swing.JFormattedTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabelIdentificador = new javax.swing.JLabel();
        txtIdentificador = new javax.swing.JTextField();
        txtDesc = new javax.swing.JTextField();
        jLabelQuantMin = new javax.swing.JLabel();
        jLabelDescricao = new javax.swing.JLabel();
        btnBuscarProdIdent = new javax.swing.JButton();
        txtQuantMin = new javax.swing.JFormattedTextField();
        lbUnidade = new javax.swing.JLabel();
        jcbUnidades = new javax.swing.JComboBox<>();
        btnIncluirUnidade = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        btnExcluirProduto = new javax.swing.JButton();
        btnIncluirProduto = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        btnSalvarProduto = new javax.swing.JButton();
        btnAlterarProduto = new javax.swing.JButton();
        btnCancelarProduto = new javax.swing.JButton();

        jLabelNome.setText("Nome:");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Insumos");

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/icons/logo_mini.png"))); // NOI18N

        jLabel3.setText("Codigo:");

        buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/icons/search.png"))); // NOI18N
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });

        txtCodigo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        txtCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCodigoKeyPressed(evt);
            }
        });

        btnPrimeiroProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/icons/first_mini.png"))); // NOI18N
        btnPrimeiroProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrimeiroProdutoActionPerformed(evt);
            }
        });

        btnAnteriorProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/icons/previous_mini.png"))); // NOI18N
        btnAnteriorProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnteriorProdutoActionPerformed(evt);
            }
        });

        btnProximoProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/icons/next_mini.png"))); // NOI18N
        btnProximoProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProximoProdutoActionPerformed(evt);
            }
        });

        btnUltimoProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/icons/last_mini.png"))); // NOI18N
        btnUltimoProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUltimoProdutoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnPrimeiroProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnAnteriorProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnProximoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(btnUltimoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(txtCodigo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel3)
                    .addComponent(buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnUltimoProduto)
                    .addComponent(btnProximoProduto)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnAnteriorProduto)
                        .addComponent(btnPrimeiroProduto)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAnteriorProduto, btnPrimeiroProduto, btnProximoProduto, btnUltimoProduto, buscar, jLabel3, txtCodigo});

        jPanel2.setBackground(new java.awt.Color(220, 220, 220));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Lotes"));

        jLabelQuantidade.setText("Quantidade:");

        jLabelFab.setText("Fabricante:");

        try {
            txtCNPJFabricante.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##.###.###/####-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCNPJFabricante.setToolTipText("  .   .   /    -  ");
        txtCNPJFabricante.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCNPJFabricanteKeyPressed(evt);
            }
        });

        btnBuscarFab.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/icons/search.png"))); // NOI18N
        btnBuscarFab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarFabActionPerformed(evt);
            }
        });

        jLabelDataInclusao.setText("Inclusão:");

        try {
            txtDataInclusao.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            txtValidade.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtValidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtValidadeKeyPressed(evt);
            }
        });

        jLabelValidade.setText("Validade:");

        jLabelNotaFiscal.setText("NF:");

        txtNotaFiscal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNotaFiscalKeyPressed(evt);
            }
        });

        jPanel11.setBackground(new java.awt.Color(220, 220, 220));
        jPanel11.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnIncluirLote.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/icons/add-mini.png"))); // NOI18N
        btnIncluirLote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIncluirLoteActionPerformed(evt);
            }
        });

        btnSalvarLote.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/icons/check-mini.png"))); // NOI18N
        btnSalvarLote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarLoteActionPerformed(evt);
            }
        });

        btnAlterarLote.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/icons/create-mini.png"))); // NOI18N
        btnAlterarLote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarLoteActionPerformed(evt);
            }
        });

        btnCancelarLote.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/icons/close-mini.png"))); // NOI18N
        btnCancelarLote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarLoteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnIncluirLote, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(btnSalvarLote, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAlterarLote, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancelarLote, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSalvarLote, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnIncluirLote, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAlterarLote, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancelarLote, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel12.setBackground(new java.awt.Color(220, 220, 220));
        jPanel12.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnPrimeiroLote.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/icons/first_mini.png"))); // NOI18N
        btnPrimeiroLote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrimeiroLoteActionPerformed(evt);
            }
        });

        btnAnteriorLote.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/icons/previous_mini.png"))); // NOI18N
        btnAnteriorLote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnteriorLoteActionPerformed(evt);
            }
        });

        btnProximoLote.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/icons/next_mini.png"))); // NOI18N
        btnProximoLote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProximoLoteActionPerformed(evt);
            }
        });

        btnUltimoLote.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/icons/last_mini.png"))); // NOI18N
        btnUltimoLote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUltimoLoteActionPerformed(evt);
            }
        });

        jLabelFab1.setText("Lote:");

        txtLote.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtLoteFocusLost(evt);
            }
        });

        btnBuscarLote.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/icons/search.png"))); // NOI18N
        btnBuscarLote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarLoteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelFab1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtLote)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBuscarLote, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(173, 173, 173)
                .addComponent(btnPrimeiroLote, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(btnAnteriorLote, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnProximoLote, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(btnUltimoLote, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(txtLote, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelFab1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBuscarLote, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(btnUltimoLote)
                            .addComponent(btnProximoLote)
                            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnAnteriorLote)
                                .addComponent(btnPrimeiroLote)))
                        .addContainerGap())))
        );

        txtQuantidade.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtQuantidade.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtQuantidadeFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelQuantidade, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelFab, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(4, 4, 4)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtCNPJFabricante, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                    .addComponent(txtQuantidade))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBuscarFab, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelNotaFiscal, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNotaFiscal)
                    .addComponent(txtNomeFab))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelValidade, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelDataInclusao, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtDataInclusao, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtValidade, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addComponent(jPanel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabelQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtNotaFiscal, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabelNotaFiscal)
                        .addComponent(txtDataInclusao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabelDataInclusao, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(9, 9, 9)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(txtCNPJFabricante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNomeFab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarFab, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelFab, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtValidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelValidade, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtCNPJFabricante, txtDataInclusao, txtNomeFab, txtNotaFiscal, txtQuantidade, txtValidade});

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Produto"));

        jLabelIdentificador.setText("Identificador:");

        jLabelQuantMin.setText("Qtd. Mín.:");

        jLabelDescricao.setText("  Descrição:");

        btnBuscarProdIdent.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/icons/search.png"))); // NOI18N
        btnBuscarProdIdent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarProdIdentActionPerformed(evt);
            }
        });

        txtQuantMin.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtQuantMin.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtQuantMinFocusLost(evt);
            }
        });

        lbUnidade.setText("Unidade:");

        btnIncluirUnidade.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/icons/add-mini.png"))); // NOI18N
        btnIncluirUnidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIncluirUnidadeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelIdentificador)
                    .addComponent(jLabelDescricao))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtIdentificador, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscarProdIdent, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelQuantMin)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtQuantMin)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbUnidade)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jcbUnidades, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(btnIncluirUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtDesc))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabelIdentificador, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIdentificador, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarProdIdent, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabelQuantMin)
                        .addComponent(txtQuantMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbUnidade)
                        .addComponent(jcbUnidades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnIncluirUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnIncluirUnidade, jcbUnidades, txtDesc, txtIdentificador, txtQuantMin});

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabelIdentificador, jLabelQuantMin, lbUnidade});

        jPanel10.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnExcluirProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/icons/trash.png"))); // NOI18N
        btnExcluirProduto.setText("Excluir");
        btnExcluirProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirProdutoActionPerformed(evt);
            }
        });

        btnIncluirProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/icons/add.png"))); // NOI18N
        btnIncluirProduto.setText("Incluir");
        btnIncluirProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIncluirProdutoActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/icons/back.png"))); // NOI18N
        jButton2.setText("Voltar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        btnSalvarProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/icons/check.png"))); // NOI18N
        btnSalvarProduto.setText("Salvar");
        btnSalvarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarProdutoActionPerformed(evt);
            }
        });

        btnAlterarProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/icons/create.png"))); // NOI18N
        btnAlterarProduto.setText("Alterar");
        btnAlterarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarProdutoActionPerformed(evt);
            }
        });

        btnCancelarProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/icons/close.png"))); // NOI18N
        btnCancelarProduto.setText("Cancelar");
        btnCancelarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarProdutoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnIncluirProduto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSalvarProduto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAlterarProduto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnExcluirProduto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCancelarProduto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnExcluirProduto)
                    .addComponent(btnIncluirProduto)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSalvarProduto)
                    .addComponent(btnAlterarProduto)
                    .addComponent(btnCancelarProduto))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
        try {
            if(txtCodigo.getText().isEmpty()){
                return;
            }
            int codigoProd = Integer.parseInt(txtCodigo.getText());
            String json;
            limpaTelaCompleta();
            if (codigoProd > 0) { //Pesquisa direta
                json = objCtrlProd.Recuperar(codigoProd);

                if (json.isEmpty()) {
                    //throw new Exception("Produto não encontrado");
                    if (Mensagem.confirm("Insumo não encontrado\nDeseja abrir a tela de pesquisa?", this)) {
                        Pesquisa pesq = new Pesquisa(new javax.swing.JFrame(), true, "PRODUTO", new String());
                        pesq.setVisible(true);
                        //System.out.println("Identificador retornado: " + pesq.getResultPesq());
                        txtIdentificador.setText(pesq.getResultPesq());
                        btnBuscarProdIdentActionPerformed(new java.awt.event.ActionEvent(this, 0, "Preencher"));
                    }
                    return;
                } else {
                    setProdutoTela(json);
                    controlaAcessoProduto(true);
                    habilitaMenuLote(false);
                }
            } else { //Abre a tela de pesquisa
                setProdutoTela(new CtrlProduto().RecuperaUltimoRegistro());
            }
        } catch (NumberFormatException ex) {
            txtCodigo.requestFocus();

        } catch (Exception ex) {
            Mensagem.warning(ex.getMessage(), this);
        } finally {
            txtCodigo.selectAll();
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_buscarActionPerformed

    private void btnIncluirProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIncluirProdutoActionPerformed
        if (!txtCodigo.getText().isEmpty()) {
            codBackup = Integer.parseInt(txtCodigo.getText());
        }

        Lotes = new JsonArray();
        limpaTelaCompleta();
        controlaAcessoProduto(false);
        controlaAcessoLote(false);
        carregaUnidadesMedida();
        btnIncluirLoteActionPerformed(new java.awt.event.ActionEvent(this, 0, "Incluir"));
        txtIdentificador.requestFocus();
        isAlterarProduto = false;
    }//GEN-LAST:event_btnIncluirProdutoActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.setVisible(false);
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtCodigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoKeyPressed
        if (evt.getKeyCode() == 10) {
            buscarActionPerformed(new java.awt.event.ActionEvent(this, WIDTH, "Salvar"));
        }
    }//GEN-LAST:event_txtCodigoKeyPressed

    private void txtNotaFiscalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNotaFiscalKeyPressed
        if (evt.getKeyCode() == 10) {
            btnSalvarProdutoActionPerformed(new java.awt.event.ActionEvent(this, WIDTH, "Salvar"));
        }
    }//GEN-LAST:event_txtNotaFiscalKeyPressed

    private void btnBuscarFabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarFabActionPerformed
        String fabricante = new CtrlFabricante().RecuperarFabCNPJ(txtCNPJFabricante.getText());

        if (fabricante == null) {
            if (Mensagem.confirm("Fabricante não encontrado!!!\nDeseja abrir a tela de pesquisa?", this)) {
                Pesquisa pesq = new Pesquisa(new javax.swing.JFrame(), true, "FABRICANTE", new String());
                pesq.setVisible(true);
                //System.out.println("Identificador retornado: " + pesq.getResultPesq());
                txtCNPJFabricante.setText(pesq.getResultPesq());
                btnBuscarFabActionPerformed(new java.awt.event.ActionEvent(this, 0, "Preencher"));
                return;
            }
        }

        objJsonProduto = objParser.parse(fabricante).getAsJsonObject();

        txtNomeFab.setText(objJsonProduto.get("nome_fab").getAsString().toString());
    }//GEN-LAST:event_btnBuscarFabActionPerformed

    private void btnBuscarLoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarLoteActionPerformed
        String lote = new CtrlLote().RecuperarLote(txtLote.getText(), txtIdentificador.getText());

        if (lote == null) {
            Mensagem.warning("Lote não encontrado!!!\nVerifique o código fornecido", this);
            txtLote.setText(Lotes.get(iAtivoLote).getAsJsonObject().get("lote").getAsString());
            return;
        }

        //System.out.println("Lote recuperado: " + lote);
        setLoteTela(lote);
    }//GEN-LAST:event_btnBuscarLoteActionPerformed

    private void btnAnteriorLoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnteriorLoteActionPerformed
        if (iAtivoLote == 0) {
            Mensagem.information("Este é o primeiro lote !!!", this);
            return;
        } else {
            iAtivoLote--;
            //System.out.println("iAtivo: " + iAtivoLote + " Lote: " + Lotes.get(iAtivoLote).toString());
            setLoteTela(Lotes.get(iAtivoLote).getAsJsonObject());
        }
        /*if (!txtCodigo.getText().isEmpty()) {
        CtrlFabricante objCtrlFab = new CtrlFabricante();
        String Fabricante = objCtrlFab.RecuperaRegistroAnterior(Integer.parseInt(txtCodigo.getText()));
        if (Fabricante == null) {
        Mensagem.information("Este é o primeiro registro !!!", this);
        return;
        }
        
        //setJsonTelaFabricante(Fabricante);
        }*/
    }//GEN-LAST:event_btnAnteriorLoteActionPerformed

    private void btnPrimeiroLoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrimeiroLoteActionPerformed
        if (iAtivoLote == 0) {
            return;
        } else {
            iAtivoLote = 0;
            setLoteTela(Lotes.get(iAtivoLote).getAsJsonObject());
        }
    }//GEN-LAST:event_btnPrimeiroLoteActionPerformed

    private void btnProximoLoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProximoLoteActionPerformed
        //System.out.println("Tamanho Array: " + Lotes.size());
        //System.out.println(iAtivoLote);
        if (iAtivoLote == Lotes.size() - 1) {
            Mensagem.information("Este é o último lote !!!", this);
            return;
        } else {
            iAtivoLote++;
            //System.out.println("iAtivo: " + iAtivoLote + " Lote: " + Lotes.get(iAtivoLote).toString());
            setLoteTela(Lotes.get(iAtivoLote).getAsJsonObject());
        }
    }//GEN-LAST:event_btnProximoLoteActionPerformed

    private void btnUltimoLoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUltimoLoteActionPerformed
        if (iAtivoLote == Lotes.size() - 1) {
            return;
        } else {
            iAtivoLote = Lotes.size() - 1;
            setLoteTela(Lotes.get(iAtivoLote).getAsJsonObject());
        }
    }//GEN-LAST:event_btnUltimoLoteActionPerformed

    private void btnExcluirProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirProdutoActionPerformed
        int codigo = txtCodigo.getText().isEmpty() ? 0 : Integer.parseInt(txtCodigo.getText());
        if (codigo > 0) {
            if (Mensagem.confirm("Deseja excluir o produto selecionado ?", this)) {
                try {
                    objCtrlProd.Deletar(codigo);
                    Mensagem.information("Produto excluido com sucesso", this);
                    limpaTelaCompleta();

                    setProdutoTela(new CtrlProduto().RecuperaRegistroAnterior(codigo));
                } catch (Exception e) {
                    if (e.getMessage().contains("Cannot delete or update a parent row: a foreign key constraint fails (`ettptf`.`pedido_produto`, CONSTRAINT `FK_PEDIDO_PRODUTO_PRODUTO_OBJCOD_OBJBASE` FOREIGN KEY (`PRODUTO_OBJCOD_OBJBASE`) REFERENCES `produto` (`OBJCOD_OBJBASE`)")) {
                        Mensagem.error("O produto não pôde ser excluído, pois consta em um atendimento!!!", this);
                    } else {
                        Mensagem.error("Erro ao excluir produto !!!", this);
                    }
                }
            }
        }
    }//GEN-LAST:event_btnExcluirProdutoActionPerformed

    private void btnIncluirLoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIncluirLoteActionPerformed
        limpaTelaLote();
        controlaAcessoLote(false);
        Date data = new Date();
        //System.out.println("Data: " + data.set);
        SimpleDateFormat formatador = new SimpleDateFormat("dd/MM/yyyy");
        txtDataInclusao.setText(formatador.format(data));
        txtDataInclusao.setEditable(false);
        txtLote.requestFocus();
        isAlterarLote = false;
    }//GEN-LAST:event_btnIncluirLoteActionPerformed

    private void btnSalvarLoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarLoteActionPerformed
        if (txtLote.getText().isEmpty() || txtQuantidade.getText().isEmpty() || txtCNPJFabricante.getText().equals("  .   .   /    -  ") || txtValidade.getText().equals("  /  /    ")) {
            Mensagem.information("Preencha todos os campos para salvar !!!", this);
            return;
        }
        try {
            if (isAlterarLote) {
                Lotes.add(toJsonLote(Lotes.get(iAtivoLote).getAsJsonObject()));
                Lotes.remove(iAtivoLote);
            } else {
                Lotes.add(toJsonLote());
            }
            isAlterarLote = false;
            iAtivoLote = Lotes.size() - 1;
        } catch (Exception e) {
            System.out.println("Erro: " + e.getMessage());
            Mensagem.error("Erro ao incluir o Lote !!!", this);
        }

        controlaAcessoLote(true);
    }//GEN-LAST:event_btnSalvarLoteActionPerformed

    private void btnAlterarLoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarLoteActionPerformed
        controlaAcessoLote(false);
        isAlterarLote = true;
    }//GEN-LAST:event_btnAlterarLoteActionPerformed

    private void btnCancelarLoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarLoteActionPerformed
        if (!Mensagem.confirm("Deseja descartar as alterações?", this)) {
            return;
        }
        if (iAtivoLote > -1) {
            setLoteTela(Lotes.get(iAtivoLote).getAsJsonObject());
        }
        controlaAcessoLote(true);
    }//GEN-LAST:event_btnCancelarLoteActionPerformed

    private void btnPrimeiroProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrimeiroProdutoActionPerformed
        String json = new CtrlProduto().RecuperaPrimeiroRegistro();

        if (json != null) {
            setProdutoTela(json);
        }
    }//GEN-LAST:event_btnPrimeiroProdutoActionPerformed

    private void btnAnteriorProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnteriorProdutoActionPerformed
        //System.out.println("Codigo: " + new JsonParser().parse(new CtrlProduto().RecuperaPrimeiroRegistro()).getAsJsonObject().get("objCod_objBase").getAsString().equals(txtCodigo.getText()));
        if (txtCodigo.getText().isEmpty()) {
            return;
        }
        if (txtCodigo.getText().equals(new JsonParser().parse(new CtrlProduto().RecuperaPrimeiroRegistro()).getAsJsonObject().get("objCod_objBase").getAsString())) {
            Mensagem.information("Este é o primeiro insumo !!!", this);
            return;
        }

        String json = new CtrlProduto().RecuperaRegistroAnterior(Integer.parseInt(txtCodigo.getText()));

        if (json != null) {
            setProdutoTela(json);
        }
    }//GEN-LAST:event_btnAnteriorProdutoActionPerformed

    private void btnProximoProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProximoProdutoActionPerformed
        if (txtCodigo.getText().isEmpty()) {
            return;
        }
        if (txtCodigo.getText().equals(new JsonParser().parse(new CtrlProduto().RecuperaUltimoRegistro()).getAsJsonObject().get("objCod_objBase").getAsString())) {
            Mensagem.information("Este é o último insumo !!!", this);
            return;
        }

        String json = new CtrlProduto().RecuperaProximoRegistro(Integer.parseInt(txtCodigo.getText()));

        if (json != null) {
            setProdutoTela(json);
        }
    }//GEN-LAST:event_btnProximoProdutoActionPerformed

    private void btnUltimoProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUltimoProdutoActionPerformed
        String json = new CtrlProduto().RecuperaUltimoRegistro();

        if (json != null) {
            setProdutoTela(json);
        }
    }//GEN-LAST:event_btnUltimoProdutoActionPerformed

    private void btnSalvarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarProdutoActionPerformed
        if (txtIdentificador.getText().isEmpty() || txtQuantMin.getText().isEmpty() || txtDesc.getText().isEmpty() || Lotes.size() == 0) {
            Mensagem.information("Preencha todos os campos para salvar !!!", this);
            return;
        }

        try {
            if (btnSalvarLote.isEnabled()) {
                //System.out.println("Entrou no salvar lote");
                btnSalvarLoteActionPerformed(new java.awt.event.ActionEvent(this, 0, "Salvar"));
            }
            int codigo_prod = new CtrlProduto().Salvar(toJsonProduto());
            txtCodigo.setText(String.valueOf(codigo_prod));
            if (isAlterarProduto) {
                Mensagem.information("Produto atualizado com sucesso", this);
            } else {
                Mensagem.information("Produto cadastrado com sucesso", this);
            }
            isAlterarProduto = false;
            habilitaMenuLote(false);
            controlaAcessoProduto(true);
            Lotes = new JsonParser().parse(new CtrlProduto().Recuperar(codigo_prod)).getAsJsonObject().get("lotes_prod").getAsJsonArray();
            int tamanhoLotes = Lotes.size() - 1;
            setLoteTela(Lotes.get(tamanhoLotes).getAsJsonObject());
            iAtivoLote = tamanhoLotes;
        } catch (Exception e) {
            System.out.println("Erro: " + e.getMessage());
            if (e.getMessage().contains("for key 'LOTE'")) {
                Mensagem.error("Erro ao cadastrar o produto \nLote cadastrado em duplicidade!!!", this);
            } else if (e.getMessage().contains("for key 'IDENTIFICADOR_PROD'")) {
                Mensagem.error("Erro ao cadastrar o produto \nIdentificador Produto já existe!!!", this);
            } else {
                Mensagem.error("Erro ao cadastrar o produto !!!", this);
            }
        }
    }//GEN-LAST:event_btnSalvarProdutoActionPerformed

    private void btnAlterarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarProdutoActionPerformed
        if (!txtCodigo.getText().isEmpty()) {
            codBackup = Integer.parseInt(txtCodigo.getText());
        }
        controlaAcessoProduto(false);
        controlaAcessoLote(true);
        isAlterarProduto = true;
        txtIdentificador.setEditable(false);
    }//GEN-LAST:event_btnAlterarProdutoActionPerformed

    private void btnCancelarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarProdutoActionPerformed
        if (!Mensagem.confirm("Deseja descartar as alterações?", this)) {
            return;
        }
        controlaAcessoLote(true);
        controlaAcessoProduto(true);
        if (codBackup > 0) {
            setProdutoTela(new CtrlProduto().Recuperar(codBackup));
        } else {
            setProdutoTela(new CtrlProduto().RecuperaPrimeiroRegistro());
        }
        habilitaMenuLote(false);
        //btnCancelarLoteActionPerformed(new java.awt.event.ActionEvent(this, 0, "Cancelar"));
        codBackup = -1;
        isAlterarProduto = false;
        isAlterarLote = false;
    }//GEN-LAST:event_btnCancelarProdutoActionPerformed

    private void btnBuscarProdIdentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarProdIdentActionPerformed
        if (txtIdentificador.getText().equals("MEDEXT")) {
            Mensagem.warning("Produto não encontrado!!!\nVerifique o identificador fornecido", this);
            return;
        }

        String produto = new CtrlProduto().RecuperarProdIdentificador(txtIdentificador.getText());

        if (produto == null) {
            Mensagem.warning("Produto não encontrado!!!\nVerifique o identificador fornecido", this);
            return;
        }

        //System.out.println("Lote recuperado: " + lote);
        setProdutoTela(produto);
    }//GEN-LAST:event_btnBuscarProdIdentActionPerformed

    private void txtCNPJFabricanteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCNPJFabricanteKeyPressed
        if (evt.getKeyCode() == 10) {
            btnBuscarFabActionPerformed(new java.awt.event.ActionEvent(this, WIDTH, "Buscar"));
            txtValidade.requestFocus();
        }
    }//GEN-LAST:event_txtCNPJFabricanteKeyPressed

    private void txtValidadeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValidadeKeyPressed
        if (evt.getKeyCode() == 10) {
            btnSalvarLoteActionPerformed(new java.awt.event.ActionEvent(this, WIDTH, "Buscar"));
        }
    }//GEN-LAST:event_txtValidadeKeyPressed

    private void txtLoteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtLoteFocusLost
        if (isAlterarLote) {
            return;
        }
        if (new CtrlLote().RecuperarLote(txtLote.getText()) != null) {
            Mensagem.information("Lote já existente!!!\nVerifique o lote informado e tente novamente", this);
            txtLote.selectAll();
        }
    }//GEN-LAST:event_txtLoteFocusLost

    private void txtQuantMinFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtQuantMinFocusLost
        String texto = txtQuantMin.getText();
        if (texto == null || texto.isEmpty()) {
            return;
        }

        int size = texto.length();
        for (int i = 0; i < size; i++) {
            if (!Character.isDigit(texto.charAt(i)) && texto.charAt(i) != '.' && texto.charAt(i) != ',') {
                txtQuantMin.requestFocus();
                txtQuantMin.selectAll();
                Mensagem.warning("Informe apenas números!!!", this);//System.out.println("Digito");
                return;
            }
        }
    }//GEN-LAST:event_txtQuantMinFocusLost

    private void txtQuantidadeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtQuantidadeFocusLost
        String texto = txtQuantidade.getText();
        if (texto == null || texto.isEmpty()) {
            return;
        }

        int size = texto.length();
        for (int i = 0; i < size; i++) {
            if (!Character.isDigit(texto.charAt(i)) && texto.charAt(i) != '.' && texto.charAt(i) != ',') {
                txtQuantidade.requestFocus();
                txtQuantidade.selectAll();
                Mensagem.warning("Informe apenas números!!!", this);//System.out.println("Digito");
                return;
            }
        }
    }//GEN-LAST:event_txtQuantidadeFocusLost

    private void btnIncluirUnidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIncluirUnidadeActionPerformed
        new UndMedida(null, true).setVisible(true);
        carregaUnidadesMedida();
    }//GEN-LAST:event_btnIncluirUnidadeActionPerformed

    private void controlaAcessoLote(boolean status) {
        btnIncluirLote.setEnabled(status);
        btnSalvarLote.setEnabled(!status);
        btnAlterarLote.setEnabled(status);
        btnCancelarLote.setEnabled(!status);
        txtCNPJFabricante.setEditable(!status);
        txtLote.setEditable(!status);
        txtValidade.setEditable(!status);
        txtQuantidade.setEditable(!status);
        txtNotaFiscal.setEditable(!status);
        btnPrimeiroLote.setEnabled(status);
        btnAnteriorLote.setEnabled(status);
        btnProximoLote.setEnabled(status);
        btnUltimoLote.setEnabled(status);
    }

    private void controlaAcessoProduto(boolean status) {
        txtDesc.setEditable(!status);
        txtIdentificador.setEditable(!status);
        txtQuantMin.setEditable(!status);
        jcbUnidades.setEnabled(!status);
        txtCodigo.setEnabled(status);
        btnIncluirUnidade.setEnabled(!status);
        btnIncluirProduto.setEnabled(status);
        btnSalvarProduto.setEnabled(!status);
        btnExcluirProduto.setEnabled(status);
        btnAlterarProduto.setEnabled(status);
        btnCancelarProduto.setEnabled(!status);
        btnPrimeiroProduto.setEnabled(status);
        btnAnteriorProduto.setEnabled(status);
        btnProximoProduto.setEnabled(status);
        btnUltimoProduto.setEnabled(status);
    }

    private void habilitaMenuLote(boolean isHabilita) {
        btnIncluirLote.setEnabled(isHabilita);
        btnSalvarLote.setEnabled(isHabilita);
        btnAlterarLote.setEnabled(isHabilita);
        btnCancelarLote.setEnabled(isHabilita);
        txtCNPJFabricante.setEditable(isHabilita);
        txtLote.setEditable(isHabilita);
        txtValidade.setEditable(isHabilita);
        txtQuantidade.setEditable(isHabilita);
        txtDataInclusao.setEditable(isHabilita);
        txtNotaFiscal.setEditable(isHabilita);
    }

    private void limpaTelaCompleta() {
        txtCodigo.setText("");
        txtDesc.setText("");
        txtCNPJFabricante.setText("");
        txtNomeFab.setText("");
        txtLote.setText("");
        txtValidade.setText("");
        txtQuantidade.setText("");
        txtQuantMin.setText("");
        txtDataInclusao.setText("");
        txtNotaFiscal.setText("");
        txtIdentificador.setText("");
    }

    private void limpaTelaLote() {
        txtCNPJFabricante.setText("");
        txtNomeFab.setText("");
        txtLote.setText("");
        txtValidade.setText("");
        txtQuantidade.setText("");
        txtDataInclusao.setText("");
        txtNotaFiscal.setText("");
    }

    private String toJsonProduto() {
        objJsonProduto = new JsonObject();
        objJsonProduto.add("descricao_prod", new JsonPrimitive(txtDesc.getText()));
        objJsonProduto.add("identificador_prod", new JsonPrimitive(txtIdentificador.getText()));
        objJsonProduto.add("qtd_min", new JsonPrimitive(txtQuantMin.getText().replace(".", "").replace(',', '.')));
        objJsonProduto.add("lotes_prod", new Gson().toJsonTree(Lotes));
        objJsonProduto.add("undMedida", new JsonParser().parse(new CtrlUndMedida().RecuperarUndMed(jcbUnidades.getSelectedItem().toString())).getAsJsonObject());
        //System.out.println("Data validade: " + txtValidade.getText().split("/")[2] + "-" + txtValidade.getText().split("/")[1] + "-" + txtValidade.getText().split("/")[0]);
        //System.out.println("data inclusao: " + txtDataInclusao.getText().split("/")[2] + "-" + txtDataInclusao.getText().split("/")[1] + "-" + txtDataInclusao.getText().split("/")[0]);
        if (isAlterarProduto) {
            //System.out.println("VAi alterar e não salvar");
            objJsonProduto.add("objCod_objBase", new JsonPrimitive(Integer.parseInt(txtCodigo.getText())));
        }

        //System.out.println(objJsonProduto.toString());
        //System.out.println(new Gson().toJson(objJsonObject));
        return new Gson().toJson(objJsonProduto);
    }

    private JsonObject toJsonLote() {
        JsonObject lote = new JsonObject();

        lote.add("fabricante_prod", new JsonParser().parse(new CtrlFabricante().RecuperarFabCNPJ(txtCNPJFabricante.getText())).getAsJsonObject());
        lote.add("lote", new JsonPrimitive(txtLote.getText()));
        lote.add("nota_fiscal_prod", new JsonPrimitive(txtNotaFiscal.getText()));
        lote.add("qtd_prod", new JsonPrimitive(txtQuantidade.getText().replace(".", "").replace(',', '.')));
        lote.add("produtoIdent", new JsonPrimitive(txtIdentificador.getText()));

        lote.add("validade_prod", new JsonPrimitive(txtValidade.getText().split("/")[2] + "-" + txtValidade.getText().split("/")[1] + "-" + txtValidade.getText().split("/")[0]));
        lote.add("data_inclusao_prod", new JsonPrimitive(txtDataInclusao.getText().split("/")[2] + "-" + txtDataInclusao.getText().split("/")[1] + "-" + txtDataInclusao.getText().split("/")[0]));
        return lote;
    }

    private JsonObject toJsonLote(JsonObject jsonAtual) {
        JsonObject lote = new JsonObject();

        lote.add("fabricante_prod", new JsonParser().parse(new CtrlFabricante().RecuperarFabCNPJ(txtCNPJFabricante.getText())).getAsJsonObject());
        lote.add("lote", new JsonPrimitive(txtLote.getText()));
        lote.add("nota_fiscal_prod", new JsonPrimitive(txtNotaFiscal.getText()));
        //System.out.println("qtd_prod: " + txtQuantidade.getText().replace(".", "").replace(',', '.'));
        lote.add("qtd_prod", new JsonPrimitive(txtQuantidade.getText().replace(".", "").replace(',', '.')));
        lote.add("produtoIdent", new JsonPrimitive(txtIdentificador.getText()));
        lote.add("validade_prod", new JsonPrimitive(txtValidade.getText().split("/")[2] + "-" + txtValidade.getText().split("/")[1] + "-" + txtValidade.getText().split("/")[0]));
        lote.add("data_inclusao_prod", new JsonPrimitive(txtDataInclusao.getText().split("/")[2] + "-" + txtDataInclusao.getText().split("/")[1] + "-" + txtDataInclusao.getText().split("/")[0]));
        if (isAlterarLote) {
            lote.add("objCod_objBase", jsonAtual.getAsJsonPrimitive("objCod_objBase"));
        }
        return lote;
    }

    private void setProdutoTela(String json) {
        if (json == null || json.isEmpty()) {
            return;
        }
        objJsonProduto = objParser.parse(json).getAsJsonObject();
        Lotes = objJsonProduto.get("lotes_prod").getAsJsonArray();
        txtDesc.setText(objJsonProduto.get("descricao_prod").getAsString());
        txtQuantMin.setText(dfSalvar.format(objJsonProduto.get("qtd_min").getAsDouble()));
        txtCodigo.setText(objJsonProduto.get("objCod_objBase").getAsString());
        txtIdentificador.setText(objJsonProduto.get("identificador_prod").getAsString());
        carregaUnidadesMedida();
        jcbUnidades.setSelectedItem(objJsonProduto.get("undMedida").getAsJsonObject().get("unidade").getAsString());
        iAtivoLote = Lotes.size() - 1;
        setLoteTela(Lotes.get(Lotes.size() - 1).getAsJsonObject());
        txtCodigo.selectAll();
    }

    private void setLoteTela(JsonObject json) {
        JsonObject jsonFabricante = json.get("fabricante_prod").getAsJsonObject();
        txtNotaFiscal.setText(json.get("nota_fiscal_prod").getAsString());
        txtCNPJFabricante.setText(jsonFabricante.get("cnpj_fab").getAsString());
        txtNomeFab.setText(jsonFabricante.get("nome_fab").getAsString());
        txtLote.setText(json.get("lote").getAsString());
        txtQuantidade.setText(dfSalvar.format(json.get("qtd_prod").getAsDouble()));
        txtValidade.setText(dateFormat(json.get("validade_prod").getAsString()));
        txtDataInclusao.setText(dateFormat(json.get("data_inclusao_prod").getAsString()));
    }

    private void setLoteTela(String json) {
        setLoteTela(new JsonParser().parse(json).getAsJsonObject());
    }

    private String dateFormat(String pDate) {
        Date data = new Date();
        data.setTime(Date.parse(pDate));
        //System.out.println("data: " + data.toString());
        SimpleDateFormat formatador = new SimpleDateFormat("dd/MM/yyyy");
        //System.out.println("data: " + formatador.format(data));
        return formatador.format(data);
    }

    private void carregaUnidadesMedida() {
        List unidades = new CtrlUndMedida().RecuperarTodos();
        JsonObject objJsonObject = new JsonObject();
        if (unidades == null) {
            return;
        }

        jcbUnidades.removeAllItems();
        for (int i = 0; i < unidades.size(); i++) {
            objJsonObject = objParser.parse(unidades.get(i).toString()).getAsJsonObject();
            jcbUnidades.addItem(objJsonObject.get("unidade").getAsString());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        java.awt.EventQueue.invokeLater(() -> {
            Produto dialog = new Produto(new javax.swing.JFrame(), true, 0);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterarLote;
    private javax.swing.JButton btnAlterarProduto;
    private javax.swing.JButton btnAnteriorLote;
    private javax.swing.JButton btnAnteriorProduto;
    private javax.swing.JButton btnBuscarFab;
    private javax.swing.JButton btnBuscarLote;
    private javax.swing.JButton btnBuscarProdIdent;
    private javax.swing.JButton btnCancelarLote;
    private javax.swing.JButton btnCancelarProduto;
    private javax.swing.JButton btnExcluirProduto;
    private javax.swing.JButton btnIncluirLote;
    private javax.swing.JButton btnIncluirProduto;
    private javax.swing.JButton btnIncluirUnidade;
    private javax.swing.JButton btnPrimeiroLote;
    private javax.swing.JButton btnPrimeiroProduto;
    private javax.swing.JButton btnProximoLote;
    private javax.swing.JButton btnProximoProduto;
    private javax.swing.JButton btnSalvarLote;
    private javax.swing.JButton btnSalvarProduto;
    private javax.swing.JButton btnUltimoLote;
    private javax.swing.JButton btnUltimoProduto;
    private javax.swing.JButton buscar;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelDataInclusao;
    private javax.swing.JLabel jLabelDescricao;
    private javax.swing.JLabel jLabelFab;
    private javax.swing.JLabel jLabelFab1;
    private javax.swing.JLabel jLabelIdentificador;
    private javax.swing.JLabel jLabelNome;
    private javax.swing.JLabel jLabelNotaFiscal;
    private javax.swing.JLabel jLabelQuantMin;
    private javax.swing.JLabel jLabelQuantidade;
    private javax.swing.JLabel jLabelValidade;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JComboBox<String> jcbUnidades;
    private javax.swing.JLabel lbUnidade;
    private javax.swing.JFormattedTextField txtCNPJFabricante;
    private javax.swing.JFormattedTextField txtCodigo;
    private javax.swing.JFormattedTextField txtDataInclusao;
    private javax.swing.JTextField txtDesc;
    private javax.swing.JTextField txtIdentificador;
    private javax.swing.JTextField txtLote;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtNomeFab;
    private javax.swing.JTextField txtNotaFiscal;
    private javax.swing.JFormattedTextField txtQuantMin;
    private javax.swing.JFormattedTextField txtQuantidade;
    private javax.swing.JFormattedTextField txtValidade;
    // End of variables declaration//GEN-END:variables
}
